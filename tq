SYSCONF(3)                 Linux Programmer's Manual                SYSCONF(3)

NNAAMMEE
       sysconf - get configuration information at run time

SSYYNNOOPPSSIISS
       ##iinncclluuddee <<uunniissttdd..hh>>

       lloonngg ssyyssccoonnff((iinntt _n_a_m_e));;

DDEESSCCRRIIPPTTIIOONN
       POSIX allows an application to test at compile or run time whether cer‐
       tain options are supported, or what the value  is  of  certain  config‐
       urable constants or limits.

       At  compile time this is done by including _<_u_n_i_s_t_d_._h_> and/or _<_l_i_m_i_t_s_._h_>
       and testing the value of certain macros.

       At run time, one can ask for numerical values using the  present  func‐
       tion  ssyyssccoonnff().   One  can ask for numerical values that may depend on
       the filesystem a file is in using  the  calls  ffppaatthhccoonnff(3)  and  ppaatthh‐‐
       ccoonnff(3).  One can ask for string values using ccoonnffssttrr(3).

       The  values obtained from these functions are system configuration con‐
       stants.  They do not change during the lifetime of a process.

       For options, typically, there is a  constant  __PPOOSSIIXX__FFOOOO  that  may  be
       defined in _<_u_n_i_s_t_d_._h_>.  If it is undefined, one should ask at run time.
       If it is defined to -1, then the option is not  supported.   If  it  is
       defined to 0, then relevant functions and headers exist, but one has to
       ask at run time what degree of support is available.  If it is  defined
       to  a  value other than -1 or 0, then the option is supported.  Usually
       the value (such as 200112L) indicates the year and month of  the  POSIX
       revision  describing  the  option.   Glibc uses the value 1 to indicate
       support as long as the POSIX revision has not been published yet.   The
       ssyyssccoonnff()  argument  will  be  __SSCC__FFOOOO.   For  a  list  of options, see
       ppoossiixxooppttiioonnss(7).

       For variables or limits, typically, there is  a  constant  __FFOOOO,  maybe
       defined in _<_l_i_m_i_t_s_._h_>, or __PPOOSSIIXX__FFOOOO, maybe defined in _<_u_n_i_s_t_d_._h_>.  The
       constant will not be defined if the limit is unspecified.  If the  con‐
       stant  is  defined,  it  gives  a guaranteed value, and a greater value
       might actually be supported.  If an application wants to take advantage
       of  values which may change between systems, a call to ssyyssccoonnff() can be
       made.  The ssyyssccoonnff() argument will be __SSCC__FFOOOO.

   PPOOSSIIXX..11 vvaarriiaabblleess
       We give the name of the variable, the name of  the  ssyyssccoonnff()  argument
       used to inquire about its value, and a short description.

       First, the POSIX.1 compatible values.

       AARRGG__MMAAXX - __SSCC__AARRGG__MMAAXX
              The  maximum  length  of  the arguments to the eexxeecc(3) family of
              functions.  Must not be less than __PPOOSSIIXX__AARRGG__MMAAXX (4096).

       CCHHIILLDD__MMAAXX - __SSCC__CCHHIILLDD__MMAAXX
              The maximum number of simultaneous processes per user ID.   Must
              not be less than __PPOOSSIIXX__CCHHIILLDD__MMAAXX (25).

       HHOOSSTT__NNAAMMEE__MMAAXX - __SSCC__HHOOSSTT__NNAAMMEE__MMAAXX
              Maximum length of a hostname, not including the terminating null
              byte, as returned by ggeetthhoossttnnaammee(2).   Must  not  be  less  than
              __PPOOSSIIXX__HHOOSSTT__NNAAMMEE__MMAAXX (255).

       LLOOGGIINN__NNAAMMEE__MMAAXX - __SSCC__LLOOGGIINN__NNAAMMEE__MMAAXX
              Maximum  length  of a login name, including the terminating null
              byte.  Must not be less than __PPOOSSIIXX__LLOOGGIINN__NNAAMMEE__MMAAXX (9).

       NNGGRROOUUPPSS__MMAAXX - __SSCC__NNGGRROOUUPPSS__MMAAXX
              Maximum number of supplementary group IDs.

       clock ticks - __SSCC__CCLLKK__TTCCKK
              The number of clock ticks per second.  The  corresponding  vari‐
              able  is obsolete.  It was of course called CCLLKK__TTCCKK.  (Note: the
              macro CCLLOOCCKKSS__PPEERR__SSEECC does not give information:  it  must  equal
              1000000.)

       OOPPEENN__MMAAXX - __SSCC__OOPPEENN__MMAAXX
              The  maximum number of files that a process can have open at any
              time.  Must not be less than __PPOOSSIIXX__OOPPEENN__MMAAXX (20).

       PPAAGGEESSIIZZEE - __SSCC__PPAAGGEESSIIZZEE
              Size of a page in bytes.  Must not be less than 1.   (Some  sys‐
              tems use PAGE_SIZE instead.)

       RREE__DDUUPP__MMAAXX - __SSCC__RREE__DDUUPP__MMAAXX
              The  number  of  repeated  occurrences  of  a  BRE  permitted by
              rreeggeexxeecc(3)   and   rreeggccoommpp(3).    Must   not   be   less    than
              __PPOOSSIIXX22__RREE__DDUUPP__MMAAXX (255).

       SSTTRREEAAMM__MMAAXX - __SSCC__SSTTRREEAAMM__MMAAXX
              The  maximum  number  of streams that a process can have open at
              any time.  If defined, it has the same value as the  standard  C
              macro FFOOPPEENN__MMAAXX.  Must not be less than __PPOOSSIIXX__SSTTRREEAAMM__MMAAXX (8).

       SSYYMMLLOOOOPP__MMAAXX - __SSCC__SSYYMMLLOOOOPP__MMAAXX
              The  maximum  number of symbolic links seen in a pathname before
              resolution returns EELLOOOOPP.  Must not  be  less  than  __PPOOSSIIXX__SSYYMM‐‐
              LLOOOOPP__MMAAXX (8).

       TTTTYY__NNAAMMEE__MMAAXX - __SSCC__TTTTYY__NNAAMMEE__MMAAXX
              The maximum length of terminal device name, including the termi‐
              nating null byte.  Must not  be  less  than  __PPOOSSIIXX__TTTTYY__NNAAMMEE__MMAAXX
              (9).

       TTZZNNAAMMEE__MMAAXX - __SSCC__TTZZNNAAMMEE__MMAAXX
              The  maximum  number  of  bytes in a timezone name.  Must not be
              less than __PPOOSSIIXX__TTZZNNAAMMEE__MMAAXX (6).

       __PPOOSSIIXX__VVEERRSSIIOONN - __SSCC__VVEERRSSIIOONN
              indicates the year and month the POSIX.1 standard  was  approved
              in  the  format  YYYYYYYYMMMMLL;  the value 119999000099LL indicates the Sept.
              1990 revision.

   PPOOSSIIXX..22 vvaarriiaabblleess
       Next, the POSIX.2 values, giving limits for utilities.

       BBCC__BBAASSEE__MMAAXX - __SSCC__BBCC__BBAASSEE__MMAAXX
              indicates the maximum _o_b_a_s_e value accepted by the bbcc(1) utility.

       BBCC__DDIIMM__MMAAXX - __SSCC__BBCC__DDIIMM__MMAAXX
              indicates the maximum value of elements permitted in an array by
              bbcc(1).

       BBCC__SSCCAALLEE__MMAAXX - __SSCC__BBCC__SSCCAALLEE__MMAAXX
              indicates the maximum _s_c_a_l_e value allowed by bbcc(1).

       BBCC__SSTTRRIINNGG__MMAAXX - __SSCC__BBCC__SSTTRRIINNGG__MMAAXX
              indicates the maximum length of a string accepted by bbcc(1).

       CCOOLLLL__WWEEIIGGHHTTSS__MMAAXX - __SSCC__CCOOLLLL__WWEEIIGGHHTTSS__MMAAXX
              indicates the maximum numbers of weights that can be assigned to
              an entry of the LLCC__CCOOLLLLAATTEE oorrddeerr keyword in the  locale  defini‐
              tion file,

       EEXXPPRR__NNEESSTT__MMAAXX - __SSCC__EEXXPPRR__NNEESSTT__MMAAXX
              is  the maximum number of expressions which can be nested within
              parentheses by eexxpprr(1).

       LLIINNEE__MMAAXX - __SSCC__LLIINNEE__MMAAXX
              The maximum length of a utility's input line, either from  stan‐
              dard  input  or from a file.  This includes space for a trailing
              newline.

       RREE__DDUUPP__MMAAXX - __SSCC__RREE__DDUUPP__MMAAXX
              The maximum number of repeated occurrences of a regular  expres‐
              sion when the interval notation \\{{mm,,nn\\}} is used.

       PPOOSSIIXX22__VVEERRSSIIOONN - __SSCC__22__VVEERRSSIIOONN
              indicates  the  version of the POSIX.2 standard in the format of
              YYYYMML.

       PPOOSSIIXX22__CC__DDEEVV - __SSCC__22__CC__DDEEVV
              indicates whether the POSIX.2 C language development  facilities
              are supported.

       PPOOSSIIXX22__FFOORRTT__DDEEVV - __SSCC__22__FFOORRTT__DDEEVV
              indicates  whether the POSIX.2 FORTRAN development utilities are
              supported.

       PPOOSSIIXX22__FFOORRTT__RRUUNN - __SSCC__22__FFOORRTT__RRUUNN
              indicates whether the POSIX.2  FORTRAN  run-time  utilities  are
              supported.

       __PPOOSSIIXX22__LLOOCCAALLEEDDEEFF - __SSCC__22__LLOOCCAALLEEDDEEFF
              indicates   whether   the   POSIX.2   creation  of  locates  via
              llooccaalleeddeeff(1) is supported.

       PPOOSSIIXX22__SSWW__DDEEVV - __SSCC__22__SSWW__DDEEVV
              indicates whether the  POSIX.2  software  development  utilities
              option is supported.

       These values also exist, but may not be standard.

        - __SSCC__PPHHYYSS__PPAAGGEESS
              The  number of pages of physical memory.  Note that it is possi‐
              ble for the product of this value and the value of  __SSCC__PPAAGGEESSIIZZEE
              to overflow.

        - __SSCC__AAVVPPHHYYSS__PPAAGGEESS
              The number of currently available pages of physical memory.

        - __SSCC__NNPPRROOCCEESSSSOORRSS__CCOONNFF
              The number of processors configured.

        - __SSCC__NNPPRROOCCEESSSSOORRSS__OONNLLNN
              The number of processors currently online (available).

RREETTUURRNN VVAALLUUEE
       If _n_a_m_e is invalid, -1 is returned, and _e_r_r_n_o is set to EEIINNVVAALL.  Other‐
       wise, the value returned is the value of the system resource and  _e_r_r_n_o
       is  not  changed.  In the case of options, a positive value is returned
       if a queried option is available, and -1 if it is not.  In the case  of
       limits, -1 means that there is no definite limit.

AATTTTRRIIBBUUTTEESS
       For   an   explanation   of   the  terms  used  in  this  section,  see
       aattttrriibbuutteess(7).

       ┌──────────┬───────────────┬─────────────┐
       │IInntteerrffaaccee │ AAttttrriibbuuttee     │ VVaalluuee       │
       ├──────────┼───────────────┼─────────────┤
       │ssyyssccoonnff() │ Thread safety │ MT-Safe env │
       └──────────┴───────────────┴─────────────┘
CCOONNFFOORRMMIINNGG TTOO
       POSIX.1-2001, POSIX.1-2008.

BBUUGGSS
       It is difficult to use AARRGG__MMAAXX because it is not specified how much  of
       the  argument  space  for eexxeecc(3) is consumed by the user's environment
       variables.

       Some returned values may be huge; they are not suitable for  allocating
       memory.

SSEEEE AALLSSOO
       bbcc(1),  eexxpprr(1), ggeettccoonnff(1), llooccaallee(1), ccoonnffssttrr(3), ffppaatthhccoonnff(3), ppaatthh‐‐
       ccoonnff(3), ppoossiixxooppttiioonnss(7)

CCOOLLOOPPHHOONN
       This page is part of release 4.10 of the Linux  _m_a_n_-_p_a_g_e_s  project.   A
       description  of  the project, information about reporting bugs, and the
       latest    version    of    this    page,    can     be     found     at
       https://www.kernel.org/doc/man-pages/.

GNU                               2015-08-08                        SYSCONF(3)
